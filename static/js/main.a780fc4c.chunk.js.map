{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyPress","event","setState","key","document","removeEventListener","this","addEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,+DAKE,WACEC,SAASC,oBAAoB,QAASC,KAAKN,YAN/C,+BASE,WACEI,SAASG,iBAAiB,QAASD,KAAKN,YAV5C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAD,mCAC+BA,EAD/B,KAEG,kCAzBd,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.a780fc4c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  UNSAFE_componentWillMount() {\n    document.removeEventListener('keyup', this.keyPress);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPress);\n  }\n\n  keyPress = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {(pressedKey)\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n\n// export const App: React.FC = () => (\n//   <div className=\"App\">\n//     <p className=\"App__message\">The last pressed key is [Enter]</p>\n//   </div>\n// );\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}